// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Exercise-02.proto

#include "Exercise-02.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace lesson07 {
PROTOBUF_CONSTEXPR Student_FullName::Student_FullName(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.firstname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.lastname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.patronymic_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct Student_FullNameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Student_FullNameDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Student_FullNameDefaultTypeInternal() {}
  union {
    Student_FullName _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Student_FullNameDefaultTypeInternal _Student_FullName_default_instance_;
PROTOBUF_CONSTEXPR Student::Student(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.grades_)*/{}
  , /*decltype(_impl_._grades_cached_byte_size_)*/{0}
  , /*decltype(_impl_.fio_)*/nullptr
  , /*decltype(_impl_.avggrade_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StudentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StudentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StudentDefaultTypeInternal() {}
  union {
    Student _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StudentDefaultTypeInternal _Student_default_instance_;
PROTOBUF_CONSTEXPR StudentsGroup::StudentsGroup(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.students_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StudentsGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StudentsGroupDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StudentsGroupDefaultTypeInternal() {}
  union {
    StudentsGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StudentsGroupDefaultTypeInternal _StudentsGroup_default_instance_;
}  // namespace lesson07
static ::_pb::Metadata file_level_metadata_Exercise_2d02_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Exercise_2d02_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Exercise_2d02_2eproto = nullptr;

const uint32_t TableStruct_Exercise_2d02_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::lesson07::Student_FullName, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::lesson07::Student_FullName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::lesson07::Student_FullName, _impl_.firstname_),
  PROTOBUF_FIELD_OFFSET(::lesson07::Student_FullName, _impl_.lastname_),
  PROTOBUF_FIELD_OFFSET(::lesson07::Student_FullName, _impl_.patronymic_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::lesson07::Student, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::lesson07::Student, _impl_.fio_),
  PROTOBUF_FIELD_OFFSET(::lesson07::Student, _impl_.grades_),
  PROTOBUF_FIELD_OFFSET(::lesson07::Student, _impl_.avggrade_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::lesson07::StudentsGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::lesson07::StudentsGroup, _impl_.students_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::lesson07::Student_FullName)},
  { 12, -1, -1, sizeof(::lesson07::Student)},
  { 21, -1, -1, sizeof(::lesson07::StudentsGroup)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::lesson07::_Student_FullName_default_instance_._instance,
  &::lesson07::_Student_default_instance_._instance,
  &::lesson07::_StudentsGroup_default_instance_._instance,
};

const char descriptor_table_protodef_Exercise_2d02_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021Exercise-02.proto\022\010lesson07\"\261\001\n\007Studen"
  "t\022\'\n\003FIO\030\001 \001(\0132\032.lesson07.Student.FullNa"
  "me\022\022\n\006grades\030\002 \003(\rB\002\020\001\022\020\n\010avgGrade\030\003 \001(\002"
  "\032W\n\010FullName\022\021\n\tfirstName\030\001 \001(\t\022\020\n\010lastN"
  "ame\030\002 \001(\t\022\027\n\npatronymic\030\003 \001(\tH\000\210\001\001B\r\n\013_p"
  "atronymic\"4\n\rStudentsGroup\022#\n\010students\030\001"
  " \003(\0132\021.lesson07.Studentb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Exercise_2d02_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Exercise_2d02_2eproto = {
    false, false, 271, descriptor_table_protodef_Exercise_2d02_2eproto,
    "Exercise-02.proto",
    &descriptor_table_Exercise_2d02_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_Exercise_2d02_2eproto::offsets,
    file_level_metadata_Exercise_2d02_2eproto, file_level_enum_descriptors_Exercise_2d02_2eproto,
    file_level_service_descriptors_Exercise_2d02_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Exercise_2d02_2eproto_getter() {
  return &descriptor_table_Exercise_2d02_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Exercise_2d02_2eproto(&descriptor_table_Exercise_2d02_2eproto);
namespace lesson07 {

// ===================================================================

class Student_FullName::_Internal {
 public:
  using HasBits = decltype(std::declval<Student_FullName>()._impl_._has_bits_);
  static void set_has_patronymic(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Student_FullName::Student_FullName(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:lesson07.Student.FullName)
}
Student_FullName::Student_FullName(const Student_FullName& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Student_FullName* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.firstname_){}
    , decltype(_impl_.lastname_){}
    , decltype(_impl_.patronymic_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.firstname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.firstname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_firstname().empty()) {
    _this->_impl_.firstname_.Set(from._internal_firstname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.lastname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lastname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lastname().empty()) {
    _this->_impl_.lastname_.Set(from._internal_lastname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.patronymic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.patronymic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_patronymic()) {
    _this->_impl_.patronymic_.Set(from._internal_patronymic(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:lesson07.Student.FullName)
}

inline void Student_FullName::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.firstname_){}
    , decltype(_impl_.lastname_){}
    , decltype(_impl_.patronymic_){}
  };
  _impl_.firstname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.firstname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lastname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.lastname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.patronymic_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.patronymic_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Student_FullName::~Student_FullName() {
  // @@protoc_insertion_point(destructor:lesson07.Student.FullName)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Student_FullName::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.firstname_.Destroy();
  _impl_.lastname_.Destroy();
  _impl_.patronymic_.Destroy();
}

void Student_FullName::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Student_FullName::Clear() {
// @@protoc_insertion_point(message_clear_start:lesson07.Student.FullName)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.firstname_.ClearToEmpty();
  _impl_.lastname_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.patronymic_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Student_FullName::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string firstName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_firstname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "lesson07.Student.FullName.firstName"));
        } else
          goto handle_unusual;
        continue;
      // string lastName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_lastname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "lesson07.Student.FullName.lastName"));
        } else
          goto handle_unusual;
        continue;
      // optional string patronymic = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_patronymic();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "lesson07.Student.FullName.patronymic"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Student_FullName::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lesson07.Student.FullName)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string firstName = 1;
  if (!this->_internal_firstname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_firstname().data(), static_cast<int>(this->_internal_firstname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "lesson07.Student.FullName.firstName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_firstname(), target);
  }

  // string lastName = 2;
  if (!this->_internal_lastname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lastname().data(), static_cast<int>(this->_internal_lastname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "lesson07.Student.FullName.lastName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_lastname(), target);
  }

  // optional string patronymic = 3;
  if (_internal_has_patronymic()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_patronymic().data(), static_cast<int>(this->_internal_patronymic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "lesson07.Student.FullName.patronymic");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_patronymic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lesson07.Student.FullName)
  return target;
}

size_t Student_FullName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lesson07.Student.FullName)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string firstName = 1;
  if (!this->_internal_firstname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_firstname());
  }

  // string lastName = 2;
  if (!this->_internal_lastname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lastname());
  }

  // optional string patronymic = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_patronymic());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Student_FullName::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Student_FullName::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Student_FullName::GetClassData() const { return &_class_data_; }


void Student_FullName::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Student_FullName*>(&to_msg);
  auto& from = static_cast<const Student_FullName&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lesson07.Student.FullName)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_firstname().empty()) {
    _this->_internal_set_firstname(from._internal_firstname());
  }
  if (!from._internal_lastname().empty()) {
    _this->_internal_set_lastname(from._internal_lastname());
  }
  if (from._internal_has_patronymic()) {
    _this->_internal_set_patronymic(from._internal_patronymic());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Student_FullName::CopyFrom(const Student_FullName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lesson07.Student.FullName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Student_FullName::IsInitialized() const {
  return true;
}

void Student_FullName::InternalSwap(Student_FullName* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.firstname_, lhs_arena,
      &other->_impl_.firstname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.lastname_, lhs_arena,
      &other->_impl_.lastname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.patronymic_, lhs_arena,
      &other->_impl_.patronymic_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Student_FullName::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Exercise_2d02_2eproto_getter, &descriptor_table_Exercise_2d02_2eproto_once,
      file_level_metadata_Exercise_2d02_2eproto[0]);
}

// ===================================================================

class Student::_Internal {
 public:
  static const ::lesson07::Student_FullName& fio(const Student* msg);
};

const ::lesson07::Student_FullName&
Student::_Internal::fio(const Student* msg) {
  return *msg->_impl_.fio_;
}
Student::Student(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:lesson07.Student)
}
Student::Student(const Student& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Student* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.grades_){from._impl_.grades_}
    , /*decltype(_impl_._grades_cached_byte_size_)*/{0}
    , decltype(_impl_.fio_){nullptr}
    , decltype(_impl_.avggrade_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_fio()) {
    _this->_impl_.fio_ = new ::lesson07::Student_FullName(*from._impl_.fio_);
  }
  _this->_impl_.avggrade_ = from._impl_.avggrade_;
  // @@protoc_insertion_point(copy_constructor:lesson07.Student)
}

inline void Student::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.grades_){arena}
    , /*decltype(_impl_._grades_cached_byte_size_)*/{0}
    , decltype(_impl_.fio_){nullptr}
    , decltype(_impl_.avggrade_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Student::~Student() {
  // @@protoc_insertion_point(destructor:lesson07.Student)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Student::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.grades_.~RepeatedField();
  if (this != internal_default_instance()) delete _impl_.fio_;
}

void Student::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Student::Clear() {
// @@protoc_insertion_point(message_clear_start:lesson07.Student)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.grades_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.fio_ != nullptr) {
    delete _impl_.fio_;
  }
  _impl_.fio_ = nullptr;
  _impl_.avggrade_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Student::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .lesson07.Student.FullName FIO = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fio(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 grades = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_grades(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_grades(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float avgGrade = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.avggrade_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Student::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lesson07.Student)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .lesson07.Student.FullName FIO = 1;
  if (this->_internal_has_fio()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::fio(this),
        _Internal::fio(this).GetCachedSize(), target, stream);
  }

  // repeated uint32 grades = 2 [packed = true];
  {
    int byte_size = _impl_._grades_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_grades(), byte_size, target);
    }
  }

  // float avgGrade = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_avggrade = this->_internal_avggrade();
  uint32_t raw_avggrade;
  memcpy(&raw_avggrade, &tmp_avggrade, sizeof(tmp_avggrade));
  if (raw_avggrade != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_avggrade(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lesson07.Student)
  return target;
}

size_t Student::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lesson07.Student)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 grades = 2 [packed = true];
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.grades_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._grades_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .lesson07.Student.FullName FIO = 1;
  if (this->_internal_has_fio()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.fio_);
  }

  // float avgGrade = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_avggrade = this->_internal_avggrade();
  uint32_t raw_avggrade;
  memcpy(&raw_avggrade, &tmp_avggrade, sizeof(tmp_avggrade));
  if (raw_avggrade != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Student::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Student::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Student::GetClassData() const { return &_class_data_; }


void Student::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Student*>(&to_msg);
  auto& from = static_cast<const Student&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lesson07.Student)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.grades_.MergeFrom(from._impl_.grades_);
  if (from._internal_has_fio()) {
    _this->_internal_mutable_fio()->::lesson07::Student_FullName::MergeFrom(
        from._internal_fio());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_avggrade = from._internal_avggrade();
  uint32_t raw_avggrade;
  memcpy(&raw_avggrade, &tmp_avggrade, sizeof(tmp_avggrade));
  if (raw_avggrade != 0) {
    _this->_internal_set_avggrade(from._internal_avggrade());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Student::CopyFrom(const Student& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lesson07.Student)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Student::IsInitialized() const {
  return true;
}

void Student::InternalSwap(Student* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.grades_.InternalSwap(&other->_impl_.grades_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Student, _impl_.avggrade_)
      + sizeof(Student::_impl_.avggrade_)
      - PROTOBUF_FIELD_OFFSET(Student, _impl_.fio_)>(
          reinterpret_cast<char*>(&_impl_.fio_),
          reinterpret_cast<char*>(&other->_impl_.fio_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Student::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Exercise_2d02_2eproto_getter, &descriptor_table_Exercise_2d02_2eproto_once,
      file_level_metadata_Exercise_2d02_2eproto[1]);
}

// ===================================================================

class StudentsGroup::_Internal {
 public:
};

StudentsGroup::StudentsGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:lesson07.StudentsGroup)
}
StudentsGroup::StudentsGroup(const StudentsGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StudentsGroup* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.students_){from._impl_.students_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:lesson07.StudentsGroup)
}

inline void StudentsGroup::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.students_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StudentsGroup::~StudentsGroup() {
  // @@protoc_insertion_point(destructor:lesson07.StudentsGroup)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StudentsGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.students_.~RepeatedPtrField();
}

void StudentsGroup::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StudentsGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:lesson07.StudentsGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.students_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StudentsGroup::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .lesson07.Student students = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_students(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StudentsGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:lesson07.StudentsGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .lesson07.Student students = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_students_size()); i < n; i++) {
    const auto& repfield = this->_internal_students(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:lesson07.StudentsGroup)
  return target;
}

size_t StudentsGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lesson07.StudentsGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .lesson07.Student students = 1;
  total_size += 1UL * this->_internal_students_size();
  for (const auto& msg : this->_impl_.students_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StudentsGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StudentsGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StudentsGroup::GetClassData() const { return &_class_data_; }


void StudentsGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StudentsGroup*>(&to_msg);
  auto& from = static_cast<const StudentsGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lesson07.StudentsGroup)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.students_.MergeFrom(from._impl_.students_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StudentsGroup::CopyFrom(const StudentsGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lesson07.StudentsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StudentsGroup::IsInitialized() const {
  return true;
}

void StudentsGroup::InternalSwap(StudentsGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.students_.InternalSwap(&other->_impl_.students_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StudentsGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Exercise_2d02_2eproto_getter, &descriptor_table_Exercise_2d02_2eproto_once,
      file_level_metadata_Exercise_2d02_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace lesson07
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::lesson07::Student_FullName*
Arena::CreateMaybeMessage< ::lesson07::Student_FullName >(Arena* arena) {
  return Arena::CreateMessageInternal< ::lesson07::Student_FullName >(arena);
}
template<> PROTOBUF_NOINLINE ::lesson07::Student*
Arena::CreateMaybeMessage< ::lesson07::Student >(Arena* arena) {
  return Arena::CreateMessageInternal< ::lesson07::Student >(arena);
}
template<> PROTOBUF_NOINLINE ::lesson07::StudentsGroup*
Arena::CreateMaybeMessage< ::lesson07::StudentsGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::lesson07::StudentsGroup >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
